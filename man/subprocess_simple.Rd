% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subprocess_simple.R
\name{subprocess_simple}
\alias{subprocess_simple}
\title{Run R-Scripts In Parallell}
\usage{
subprocess_simple(script_paths, working_directory, process_limit = 3,
  overall_timeout = 60, print_stdout = F, print_stderr = F,
  debuglevel = 0)
}
\arguments{
\item{script_paths}{(character) Paths to R-scripts.}

\item{working_directory}{(character) Working directory for scripts. Recycled if neccessary.}

\item{process_limit}{(integer) Number of processes to run in parallell (i.e. Rscript.exe instances).}

\item{overall_timeout}{(integer) Maximum run time for all scripts. Then kills all processes and exits.}

\item{print_stdout}{(logical) Print standard out from process?}

\item{print_stderr}{(logical) Print standard error from process?}

\item{debuglevel}{(integer) Print debug messages, 0 (nothing) to 3 (maximum).}
}
\value{
Value returned is vector of \code{exit_codes} for all
(so far completed) scripts.
}
\description{
`subprocess_simple` runs scripts in multiple processes but without duplicates.
}
\details{
R scripts are run using Rscript.exe. Only one script with the same name, can run in parallell.
Duplicates will be finished one at a time. Print-out from processes will carry a
small time penalty when running.
Always end the scripts with "quit(save = 'no')" .
}
\examples{
\dontrun{
tmp1 <- c(
"print('Hello World! 1'); print(Sys.time()) Sys.sleep(sample(x = 3:10, size = 1)); quit(save = 'no')",
"print('Hello World! 2'); Sys.sleep(sample(x = 3:10, size = 1)); quit(save = 'no')",
"print('Hello World! 3'); Sys.sleep(sample(x = 3:10, size = 1)); quit(save = 'no')",
"print('Hello World! err'); Sys.sleep(sample(x = 3:10, size = 1)); stop('error here.'); quit(save = 'no')"
)
tmpf1 <- c(
  tempfile(fileext = ".R"),
  tempfile(fileext = ".R"),
  tempfile(fileext = ".R"),
  tempfile(fileext = ".R"))
for(i in 1:4) writeLines(text = tmp1[i], con = tmpf1[i])
subprocess_simple(script_paths = c(tmpf1, tmpf1),
                 working_directory = c("."),
                 process_limit = 5,
                 overall_timeout = 15,
                 print_stdout = T,
                 print_stderr = T,
                 debuglevel = 0)
}

}
\keyword{subprocess_simple}
